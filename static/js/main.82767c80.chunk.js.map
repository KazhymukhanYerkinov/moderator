{"version":3,"sources":["validators/validation.js","Modal/Modal.js","FormControl/FromControl.js","redux/auth-reducer.js","MyFormik.jsx","App.js","redux/redux-store.js","index.js","Modal/Modal.module.css","FormControl/FormControl.module.css"],"names":["minLen","maxLen","Modal","className","cls","modal","id","modal__inner","modal__text","href","success","InputPassword","input","label","meta","touched","error","invalid","React","useState","value","setValue","formInput","OutlinedInput","placeholder","type","fullWidth","autoComplete","endAdornment","Tooltip","arrow","title","placement","InputAdornment","position","IconButton","aria-label","onClick","FormHelperText","style","color","marginLeft","InputText","SIGN_UP_SUCCESS","SIGN_UP_FAIL","initialState","isOpen","authReducer","state","action","textRequired","emailRequired","test","passwordRequired","exec","validationSchema","Yup","shape","email","min","max","required","password","MyFormik","signup","initialValues","name","surname","password_confirm","onSubmit","formData","actions","isSubmitting","errors","global_error","disabled","lengthEight","length","App","reduxForm","form","handleSubmit","Field","component","validate","this","props","Component","connect","authPage","first_name","last_name","re_password","dispatch","a","config","headers","body","JSON","stringify","axios","res","console","log","setFieldError","stopSubmit","reducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"yIAU8BA,EAAQC,E,mHCOvBC,EAbD,WACV,OACI,qBAAKC,UAAYC,IAAIC,MAAQC,GAAG,QAAhC,SACI,sBAAKH,UAAcC,IAAIG,aAAvB,UACI,qBAAKJ,UAAaC,IAAII,YAAtB,uhBAGA,oBAAGC,KAAK,0BAAR,cAAmC,wBAAQN,UAAaC,IAAIM,QAAzB,8CAAnC,a,kHCGHC,EAAgB,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAA+C,IAAxCC,KAAQC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QAAgB,EACtDC,IAAMC,UAAS,GADuC,mBAC1EC,EAD0E,KACnEC,EADmE,KAOlF,OACI,sBAAKlB,UAAcC,IAAIkB,UAAvB,UACI,cAACC,EAAA,EAAD,yBACIpB,UAAcC,IAAIQ,MAClBY,YAAgBX,EAChBG,MAAUD,GAAWE,EACrBQ,KAASL,EAAQ,OAAO,WACxBM,WAAS,EACTC,aAAe,MACXf,GAPR,IAQIgB,aACI,cAACC,EAAA,EAAD,CAASC,OAAK,EAACC,MAAUX,EAAQ,4EAAgB,wFAAmBY,UAAY,MAAhF,SACI,cAACC,EAAA,EAAD,CAAgBC,SAAW,MAA3B,SACI,cAACC,EAAA,EAAD,CACIC,aAAa,6BACbC,QAnBT,WACfhB,GAAUD,IAgBU,SAGMA,EAAQ,cAAC,IAAD,IAAiB,cAAC,IAAD,aAQ7CL,GAAWC,GAAS,eAACsB,EAAA,EAAD,CAAgBC,MAAS,CAAEC,MAAO,UAAYC,WAAY,OAA1D,cAAqEzB,EAArE,WAMrB0B,EAAY,SAAC,GAAyD,IAAvD9B,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,MAA+C,IAAxCC,KAAQC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,QAC9D,OACI,sBAAKd,UAAcC,IAAIkB,UAAvB,UACI,cAACC,EAAA,EAAD,aACIP,MAAUD,GAAWE,EACrBd,UAAcC,IAAIQ,MAClBY,YAAgBX,EAChBY,KAAO,OACPC,WAAS,GACLd,IAGNG,GAAWC,GAAS,eAACsB,EAAA,EAAD,CAAgBC,MAAS,CAAEC,MAAO,UAAWC,WAAY,OAAzD,cAAoEzB,EAApE,W,4CC5D5B2B,EAAkB,kBAClBC,EAAe,eAGjBC,EAAe,CACfC,QAAQ,GA6CGC,EA1CK,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCAClD,OAAQA,EAAOxB,MACX,KAAKkB,EACD,OAAO,2BACAK,GADP,IAEIF,QAAQ,IAEhB,KAAKF,EACD,OAAO,2BACAI,GADP,IAEIF,QAAQ,IAEhB,QACI,OAAOE,IHxBNE,G,OAAe,SAAA9B,GACxB,IAAIA,EACJ,MAAO,uLAGE+B,EAAgB,SAAA/B,GACzB,OAAIA,IAAU,4CAA4CgC,KAAKhC,GAAe,6KACpEA,OAAL,EAAmB,sLASfiC,EAAmB,SAAAjC,GAC5B,GAA4C,OAAxC,wBAAwBkC,KAAKlC,GAAiB,MAAO,qP,iBIXvDmC,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MAAaG,IAAI,EAAG,uBAAuBC,IAAI,GAAI,wBAAwBC,SAAS,kBAC3FC,SAAUN,MAAaG,IAAI,EAAG,sBAAsBC,IAAI,GAAI,wBAAwBC,SAAS,oBAIlFE,EAAW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKzB,OACE,gCACE,2CAEA,cAAC,IAAD,CACEC,cAAiB,CACfC,KAAM,GACNC,QAAS,GACTT,MAAO,GACPI,SAAU,GACVM,iBAAkB,IAEpBC,SAhBS,SAACC,EAAUC,GACxBP,EAAOM,EAASZ,MAAOY,EAASJ,KAAMI,EAASH,QAASG,EAASR,SAAUQ,EAASF,iBAAkBG,IAgBlGhB,iBAAqBA,EATvB,SAYG,gBAAGiB,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAjB,OACC,eAAC,IAAD,WAEIA,EAAOC,cAAgB,qCAASD,EAAOC,aAAhB,OACzB,cAAC,IAAD,CAAOvE,UAAY,QAAQ+D,KAAO,OAAO1C,YAAc,iBACvD,cAAC,IAAD,CAAc0C,KAAO,SAErB,cAAC,IAAD,CAAO/D,UAAY,QAAQ+D,KAAO,UAAU1C,YAAc,oBAC1D,cAAC,IAAD,CAAc0C,KAAO,YAErB,cAAC,IAAD,CAAO/D,UAAY,QAAQ+D,KAAO,QAAQ1C,YAAc,kBACxD,cAAC,IAAD,CAAc0C,KAAO,UAErB,cAAC,IAAD,CAAO/D,UAAY,QAAQ+D,KAAO,WAAW1C,YAAc,qBAC3D,cAAC,IAAD,CAAc0C,KAAO,aAErB,cAAC,IAAD,CAAO/D,UAAY,QAAQ+D,KAAO,mBAAmB1C,YAAc,6BACnE,cAAC,IAAD,CAAc0C,KAAO,qBAErB,wBAAQ/D,UAAY,SAASsB,KAAO,SAASkD,SAAaH,EAA1D,gCCtCNI,GLJwB5E,EKII,ELJIC,EKID,GLJY,SAACmB,GAC9C,OAAIA,EAAMyD,OAAS5E,EAAc,2GAAN,OAA6BA,EAA7B,qDAClBmB,EAAMyD,OAAS7E,EAAc,qGAAN,OAA4BA,EAA5B,0DAA3B,IKsBH8E,GAFeC,YAAU,CAAEC,KAAM,OAAlBD,EAhBL,SAAC,GAA6B,IAA3BE,EAA0B,EAA1BA,aAAcjE,EAAY,EAAZA,MAC/B,OACE,qCACEA,GAAS,sBAAKb,UAAY,QAAjB,cAA4Ba,EAA5B,OACX,uBAAMb,UAAY,OAAOkE,SAAaY,EAAtC,UACE,cAACC,EAAA,EAAD,CAAOhB,KAAQ,OAAQiB,UAAczC,EAAY7B,MAAU,qBAASuE,SAAalC,IACjF,cAACgC,EAAA,EAAD,CAAOhB,KAAQ,UAAWiB,UAAczC,EAAY7B,MAAU,6CAAYuE,SAAalC,IACvF,cAACgC,EAAA,EAAD,CAAOhB,KAAQ,QAASiB,UAAczC,EAAY7B,MAAU,SAAWuE,SAAajC,IACpF,cAAC+B,EAAA,EAAD,CAAOhB,KAAQ,YAAaiB,UAAcxE,EAAgBE,MAAU,kFAAmBuE,SAAa,CAAClC,EAAc0B,EAAavB,KAChI,cAAC6B,EAAA,EAAD,CAAOhB,KAAQ,YAAaiB,UAAcxE,EAAgBE,MAAU,8FAAqBuE,SAAa,CAAClC,EAAc0B,EAAavB,KAClI,wBAAQlD,UAAU,SAASsB,KAAO,SAAlC,qI,4JASJ,WAAU,IAAD,EAEoB4D,KAAKC,MAAxBxC,EAFD,EAECA,OAAQkB,EAFT,EAESA,OAOhB,OACE,sBAAK7D,UAAY,UAAjB,UACE,sBAAKA,UAAU,iBAAf,UAEE,qBAAKA,UAAU,QAAf,kFACA,cAAC,EAAD,CAAU6D,OAAWA,OAGtBlB,GAAU,cAAC,EAAD,W,GAlBD5B,IAAMqE,YA8BTC,eANO,SAACxC,GACrB,MAAO,CACLF,OAAQE,EAAMyC,SAAS3C,UAIa,CAAEkB,OFlCpB,SAACN,EAAOgC,EAAYC,EAAW7B,EAAU8B,EAAarB,GAAtD,8CAAmE,WAAOsB,GAAP,mBAAAC,EAAA,yDAChFhC,IAAa8B,EADmE,iCAGvEG,EAAS,CACXC,QAAS,CAAE,eAAgB,qBAEzBC,EAAOC,KAAKC,UAAU,CAAEzC,QAAOgC,aAAYC,YAAY7B,WAAU8B,gBANM,SAQ3DQ,OAAA,2CAAuDH,EAAMF,GARF,OAQvEM,EARuE,OAS7EC,QAAQC,IAAIF,GAEZR,EAAS,CAAEpE,KAAMkB,IAX4D,kDAc7EkD,EAAS,CAAEpE,KAAMmB,IACjB2B,EAAQiC,cAAc,eAAgB,eAfuC,gCAmBjFX,EAASY,YAAW,MAAO,CAAC,UAAa,8GAnBwC,0DAAnE,wDEkCPjB,CAAqCV,G,6BCzDhD4B,GAAUC,aAAgB,CAC1B3B,KAAM4B,KACNnB,SAAU1C,IAGV8D,GAAQC,aAAYJ,GAASK,aAAgBC,OACjDC,OAAOJ,MAAQA,GAEAA,UCPfK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAUA,GAApB,SACI,cAAC,EAAD,MAEJO,SAASC,eAAe,U,mBCX1BC,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,aAAe,4BAA4B,YAAc,2BAA2B,QAAU,yB,mBCAxKD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,8B","file":"static/js/main.82767c80.chunk.js","sourcesContent":["export const textRequired = value => {\r\n    if (value) return undefined;\r\n    return \"Поле, обязательное для заполнения\";\r\n}\r\n\r\nexport const emailRequired = value => {\r\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) return \"Неправильный электронный адрес\";\r\n    else if (!value) return \"Поле, обязательное для заполнения\";\r\n}\r\n\r\nexport const LengthCreator = (minLen, maxLen) => (value) => {\r\n    if (value.length > maxLen) return `Максимальная длина ${maxLen} символов`\r\n    else if (value.length < minLen) return `Минимальная длина ${minLen} символов`\r\n    return undefined;   \r\n}\r\n\r\nexport const passwordRequired = value => {\r\n    if (/^(?=.*[a-zA-Z]).{1,}$/.exec(value) === null) return \"Ваш пароль должен содержать хотя бы одну букву\";\r\n    return undefined;\r\n}","import React from 'react';\r\nimport cls from './Modal.module.css';\r\n\r\n\r\nconst Modal = () => {\r\n    return (\r\n        <div className={ cls.modal } id=\"modal\">\r\n            <div className = { cls.modal__inner }>\r\n                <div className = {cls.modal__text} >\r\n                    Вы успешно зарегистрировались. Теперь вы можете перейти на страницу администратора. Удачи в работе :)\r\n                </div>\r\n                <a href=\"https://e-men.kz/admin/\"> <button className = {cls.success}> Войти </button> </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport cls from './FormControl.module.css';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\n\r\n\r\nexport const InputPassword = ({ input, label, meta: { touched, error, invalid } }) => {\r\n    const [ value, setValue ] = React.useState(false);\r\n    \r\n    const onSetValue = () => {\r\n        setValue(!value)\r\n    }\r\n\r\n    return (\r\n        <div className = { cls.formInput }>\r\n            <OutlinedInput \r\n                className = { cls.input }\r\n                placeholder = { label }\r\n                error = { touched && invalid }\r\n                type = { value ? 'text':'password' }\r\n                fullWidth\r\n                autoComplete = 'on'\r\n                {...input}\r\n                endAdornment = {\r\n                    <Tooltip arrow title = { value ? 'Скрыть пароль':'Показать пароль'} placement = 'top' >\r\n                        <InputAdornment position = \"end\">\r\n                            <IconButton\r\n                                aria-label = \"toggle password visibility\"\r\n                                onClick = { onSetValue }>\r\n                                { value ? <Visibility /> : <VisibilityOff/> }\r\n                                \r\n\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    </Tooltip>\r\n                }\r\n            />\r\n            { touched && error && <FormHelperText style = {{ color: '#FF564E',  marginLeft: '5px' }}> {error} </FormHelperText> }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputText = ({ input, label, meta: { touched, error, invalid } }) => {\r\n    return (\r\n        <div className = { cls.formInput }>\r\n            <OutlinedInput \r\n                error = { touched && invalid }\r\n                className = { cls.input }\r\n                placeholder = { label }\r\n                type = 'text'\r\n                fullWidth\r\n                {...input}\r\n            />   \r\n\r\n            { touched && error && <FormHelperText style = {{ color: '#FF564E', marginLeft: '5px' }}> {error} </FormHelperText> }\r\n        </div>\r\n    )\r\n}","import * as axios from 'axios';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nconst SIGN_UP_FAIL = 'SIGN_UP_FAIL';\r\n\r\n\r\nlet initialState = {\r\n    isOpen: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SIGN_UP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isOpen: true\r\n            }\r\n        case SIGN_UP_FAIL:\r\n            return {\r\n                ...state,\r\n                isOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const signup = (email, first_name, last_name, password, re_password, actions ) => async (dispatch) => {\r\n    if ( password === re_password ) {\r\n        try {\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const body = JSON.stringify({ email, first_name, last_name,  password, re_password });\r\n\r\n            const res = await axios.post(`https://e-men.kz/api/v1/auth/moderators/`, body, config)\r\n            console.log(res);\r\n\r\n            dispatch({ type: SIGN_UP_SUCCESS });\r\n\r\n        } catch (err) {\r\n            dispatch({ type: SIGN_UP_FAIL });\r\n            actions.setFieldError('global_error', 'Email error');\r\n            \r\n        }\r\n    } else {\r\n        dispatch(stopSubmit('app', {'password2': 'Пароли не совпадают'}))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { setSubmitFailed } from 'redux-form';\r\n\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().min(2, 'Minimum 2 character').max(70, 'Maximum 70 character').required('Required field'),\r\n  password: Yup.string().min(2, 'Minimum 2 charcter').max(70, 'Maximum 70 character').required('Required field'),\r\n})\r\n\r\n\r\nexport const MyFormik = ({ signup }) => {\r\n  const submit = (formData, actions) => {\r\n    signup(formData.email, formData.name, formData.surname, formData.password, formData.password_confirm, actions)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1> Sign Up </h1>\r\n\r\n      <Formik\r\n        initialValues = {{\r\n          name: '',\r\n          surname: '',\r\n          email: '',\r\n          password: '',\r\n          password_confirm: '',\r\n        }}\r\n        onSubmit = { submit }\r\n        validationSchema = { validationSchema }\r\n      >\r\n\r\n        {({ isSubmitting, errors }) => (\r\n          <Form>\r\n          \r\n            { errors.global_error && <span> { errors.global_error  } </span> }\r\n            <Field className = 'input' name = 'name' placeholder = 'Enter a name' />\r\n            <ErrorMessage name = 'name' /> \r\n\r\n            <Field className = 'input' name = 'surname' placeholder = 'Enter a surname'/>\r\n            <ErrorMessage name = 'surname' /> \r\n\r\n            <Field className = 'input' name = 'email' placeholder = 'Enter a email'/>\r\n            <ErrorMessage name = 'email' />\r\n\r\n            <Field className = 'input' name = 'password' placeholder = 'Enter a password'/>\r\n            <ErrorMessage name = 'password' />\r\n\r\n            <Field className = 'input' name = 'password_confirm' placeholder = 'Enter a password confirm'/>\r\n            <ErrorMessage name = 'password_confirm' /> \r\n\r\n            <button className = 'button' type = 'submit' disabled = { isSubmitting }> Submit </button>\r\n          </Form>\r\n        )}\r\n\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\n\nimport Modal from './Modal/Modal';\nimport { InputPassword, InputText } from './FormControl/FromControl';\nimport { signup } from './redux/auth-reducer';\n\nimport './App.css';\nimport { textRequired, emailRequired, LengthCreator,passwordRequired } from './validators/validation';\nimport { MyFormik } from './MyFormik';\n\n\n\nconst lengthEight = LengthCreator(8, 50);\n\nconst AppForm = ({ handleSubmit, error }) => {\n  return (\n    <>\n    { error && <div className = 'error'> { error } </div> }\n    <form className = 'form' onSubmit = { handleSubmit }>\n      <Field name = {'name'} component = { InputText } label = { 'Имя' }  validate = { textRequired }/>\n      <Field name = {'surname'} component = { InputText } label = { 'Фамилия' } validate = { textRequired }/>\n      <Field name = {'email'} component = { InputText } label = { 'E-mail' } validate = { emailRequired }/>\n      <Field name = {'password1'} component = { InputPassword } label = { 'Создать пароль' } validate = { [textRequired, lengthEight, passwordRequired] }/>\n      <Field name = {'password2'} component = { InputPassword } label = { 'Повторить пароль' } validate = { [textRequired, lengthEight, passwordRequired] }/>\n      <button className=\"button\" type = 'submit'> Зарегистрироваться </button> \n    </form>\n    </>\n  )\n}\n\nconst AppReduxForm = reduxForm({ form: 'app' })(AppForm);\n\nclass App extends React.Component {\n  render() {\n      \n    const { isOpen, signup } = this.props;\n    function onSubmit(formData) {\n      signup(formData.email, formData.name, formData.surname, formData.password1, formData.password2)\n      \n      \n    }\n\n    return (\n      <div className = \"wrapper\">\n        <div className=\"wrapper__inner\">\n\n          <div className=\"title\"> Регистрация </div>\n          <MyFormik signup = { signup }/>\n          \n        </div>\n        {isOpen && <Modal />}\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    isOpen: state.authPage.isOpen,\n  }\n}\n\nexport default connect(mapStateToProps, { signup })(App);\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './auth-reducer';\r\n\r\n\r\nlet reducer = combineReducers({\r\n    form: formReducer,\r\n    authPage: authReducer,\r\n});\r\n\r\nlet store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\n\nReactDOM.render(\n  <Provider store = { store }>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3ZjmV\",\"open\":\"Modal_open__2oWHk\",\"modal__inner\":\"Modal_modal__inner__XAYtA\",\"modal__text\":\"Modal_modal__text__29HZU\",\"success\":\"Modal_success__1aRiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"FormControl_formInput__20MNh\",\"input\":\"FormControl_input__Eo-kC\"};"],"sourceRoot":""}