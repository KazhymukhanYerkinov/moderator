{"version":3,"sources":["validators/validation.js","Modal/Modal.js","FormControl/FromControl.js","redux/auth-reducer.js","App.js","redux/redux-store.js","index.js","Modal/Modal.module.css","FormControl/FormControl.module.css"],"names":["minLen","maxLen","Modal","className","cls","modal","id","modal__inner","modal__text","href","success","InputPassword","input","label","meta","touched","error","invalid","React","useState","value","setValue","formInput","OutlinedInput","placeholder","type","fullWidth","autoComplete","endAdornment","Tooltip","arrow","title","placement","InputAdornment","position","IconButton","aria-label","onClick","FormHelperText","style","color","marginLeft","InputText","SIGN_UP_SUCCESS","SIGN_UP_FAIL","initialState","isOpen","authReducer","state","action","textRequired","emailRequired","test","passwordRequired","exec","lengthEight","length","AppReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","name","component","validate","App","this","props","signup","formData","email","surname","password1","password2","Component","connect","authPage","first_name","last_name","password","re_password","dispatch","a","config","headers","body","JSON","stringify","axios","res","console","log","stopSubmit","_error","reducer","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9b4d17d0.chunk.js","sourcesContent":["export const textRequired = value => {\r\n    if (value) return undefined;\r\n    return \"Поле, обязательное для заполнения\";\r\n}\r\n\r\nexport const emailRequired = value => {\r\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) return \"Неправильный электронный адрес\";\r\n    else if (!value) return \"Поле, обязательное для заполнения\";\r\n}\r\n\r\nexport const LengthCreator = (minLen, maxLen) => (value) => {\r\n    if (value.length > maxLen) return `Максимальная длина ${maxLen} символов`\r\n    else if (value.length < minLen) return `Минимальная длина ${minLen} символов`\r\n    return undefined;   \r\n}\r\n\r\nexport const passwordRequired = value => {\r\n    if (/^(?=.*[a-zA-Z]).{1,}$/.exec(value) === null) return \"Ваш пароль должен содержать хотя бы одну букву\";\r\n    return undefined;\r\n}","import React from 'react';\r\nimport cls from './Modal.module.css';\r\n\r\n\r\nconst Modal = () => {\r\n    return (\r\n        <div className={ cls.modal } id=\"modal\">\r\n            <div className = { cls.modal__inner }>\r\n                <div className = {cls.modal__text} >\r\n                    Вы успешно зарегистрировались. Теперь вы можете перейти на страницу администратора. Удачи в работе :)\r\n                </div>\r\n                <a href=\"https://e-men.kz/admin/\"> <button className = {cls.success}> Войти </button> </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport cls from './FormControl.module.css';\r\n\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputAdornment from '@material-ui/core/InputAdornment'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\n\r\n\r\nexport const InputPassword = ({ input, label, meta: { touched, error, invalid } }) => {\r\n    const [ value, setValue ] = React.useState(false);\r\n    \r\n    const onSetValue = () => {\r\n        setValue(!value)\r\n    }\r\n\r\n    return (\r\n        <div className = { cls.formInput }>\r\n            <OutlinedInput \r\n                className = { cls.input }\r\n                placeholder = { label }\r\n                error = { touched && invalid }\r\n                type = { value ? 'text':'password' }\r\n                fullWidth\r\n                autoComplete = 'on'\r\n                {...input}\r\n                endAdornment = {\r\n                    <Tooltip arrow title = { value ? 'Скрыть пароль':'Показать пароль'} placement = 'top' >\r\n                        <InputAdornment position = \"end\">\r\n                            <IconButton\r\n                                aria-label = \"toggle password visibility\"\r\n                                onClick = { onSetValue }>\r\n                                { value ? <Visibility /> : <VisibilityOff/> }\r\n                                \r\n\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    </Tooltip>\r\n                }\r\n            />\r\n            { touched && error && <FormHelperText style = {{ color: '#FF564E',  marginLeft: '5px' }}> {error} </FormHelperText> }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const InputText = ({ input, label, meta: { touched, error, invalid } }) => {\r\n    return (\r\n        <div className = { cls.formInput }>\r\n            <OutlinedInput \r\n                error = { touched && invalid }\r\n                className = { cls.input }\r\n                placeholder = { label }\r\n                type = 'text'\r\n                fullWidth\r\n                {...input}\r\n            />   \r\n\r\n            { touched && error && <FormHelperText style = {{ color: '#FF564E', marginLeft: '5px' }}> {error} </FormHelperText> }\r\n        </div>\r\n    )\r\n}","import * as axios from 'axios';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nconst SIGN_UP_FAIL = 'SIGN_UP_FAIL';\r\n\r\n\r\nlet initialState = {\r\n    isOpen: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SIGN_UP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isOpen: true\r\n            }\r\n        case SIGN_UP_FAIL:\r\n            return {\r\n                ...state,\r\n                isOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const signup = (email, first_name, last_name, password, re_password ) => async (dispatch) => {\r\n    if ( password === re_password ) {\r\n        try {\r\n            const config = {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n            const body = JSON.stringify({ email, first_name, last_name,  password, re_password });\r\n\r\n            const res = await axios.post(`https://e-men.kz/api/v1/auth/moderators/`, body, config)\r\n            console.log(res);\r\n\r\n            dispatch({ type: SIGN_UP_SUCCESS });\r\n\r\n        } catch (err) {\r\n            dispatch({ type: SIGN_UP_FAIL });\r\n            dispatch(stopSubmit('app', { _error: \"Такой адрес электронной почты уже существует. Пожалуйста, введите другой адрес электронной почты.\" }))\r\n            \r\n        }\r\n    } else {\r\n        console.log('HERE');\r\n        dispatch(stopSubmit('app', {'password2': 'Пароли не совпадают'}))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\n\nimport Modal from './Modal/Modal';\nimport { InputPassword, InputText } from './FormControl/FromControl';\nimport { signup } from './redux/auth-reducer';\n\nimport './App.css';\nimport { textRequired, emailRequired, LengthCreator,passwordRequired } from './validators/validation';\n\n\n\nconst lengthEight = LengthCreator(8, 50);\n\nconst AppForm = ({ handleSubmit, error }) => {\n  return (\n    <>\n    { error && <div className = 'error'> { error } </div> }\n    <form className = 'form' onSubmit = { handleSubmit }>\n      <Field name = {'name'} component = { InputText } label = { 'Имя' }  validate = { textRequired }/>\n      <Field name = {'surname'} component = { InputText } label = { 'Фамилия' } validate = { textRequired }/>\n      <Field name = {'email'} component = { InputText } label = { 'E-mail' } validate = { emailRequired }/>\n      <Field name = {'password1'} component = { InputPassword } label = { 'Создать пароль' } validate = { [textRequired, lengthEight, passwordRequired] }/>\n      <Field name = {'password2'} component = { InputPassword } label = { 'Повторить пароль' } validate = { [textRequired, lengthEight, passwordRequired] }/>\n      <button className=\"button\" type = 'submit'> Зарегистрироваться </button> \n    </form>\n    </>\n  )\n}\n\nconst AppReduxForm = reduxForm({ form: 'app' })(AppForm);\n\nclass App extends React.Component {\n  render() {\n      \n    const { isOpen, signup } = this.props;\n    function onSubmit(formData) {\n      signup(formData.email, formData.name, formData.surname, formData.password1, formData.password2)\n      \n    }\n\n    return (\n      <div className = \"wrapper\">\n        <div className=\"wrapper__inner\">\n\n          <div className=\"title\"> Регистрация </div>\n          <AppReduxForm onSubmit = { onSubmit }/>\n          \n        </div>\n        {isOpen && <Modal />}\n      </div>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    isOpen: state.authPage.isOpen,\n  }\n}\n\nexport default connect(mapStateToProps, { signup })(App);\n","import { applyMiddleware, createStore, combineReducers } from 'redux';\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport authReducer from './auth-reducer';\r\n\r\n\r\nlet reducer = combineReducers({\r\n    form: formReducer,\r\n    authPage: authReducer,\r\n});\r\n\r\nlet store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\n\nReactDOM.render(\n  <Provider store = { store }>\n      <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__3ZjmV\",\"open\":\"Modal_open__2oWHk\",\"modal__inner\":\"Modal_modal__inner__XAYtA\",\"modal__text\":\"Modal_modal__text__29HZU\",\"success\":\"Modal_success__1aRiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"FormControl_formInput__20MNh\",\"input\":\"FormControl_input__Eo-kC\"};"],"sourceRoot":""}